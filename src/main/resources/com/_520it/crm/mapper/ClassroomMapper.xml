<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.ClassroomMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.Classroom" >
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="stite" property="stite" />
    <result column="seatNumber" property="seatNumber" />
    <result column="state" property="state" />
  </resultMap>
  <delete id="deleteByPrimaryKey"  >
    delete from classroom
    where id = #{id}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
    insert into classroom (name, stite, seatNumber, state)
    values (#{name}, #{stite}, #{seatNumber}, 1)
  </insert>
  <update id="updateByPrimaryKey" >
    update classroom
    set name = #{name},
      stite = #{stite},
      seatNumber = #{seatNumber}
    where id = #{id}
  </update>
  <!--办理启用教室的业务-->
  <update id="useRoom">
    update classroom
    set
      state = 0
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select id, name, stite, seatNumber, state
    from classroom
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, stite, seatNumber, state
    from classroom
  </select>

  <select id="queryForCount" resultType="long">
    select count(id) from classroom
    <include refid="base_where"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select id, name, stite, seatNumber, state
    from classroom
    <include refid="base_where"/>
    limit #{start},#{rows}
  </select>

  <sql id="base_where">
    <where>
      <if test="keyword != null">
        and ( classroom.name like concat('%',#{keyword},'%') or classroom.stite like concat('%',#{keyword},'%'))
      </if>
    </where>
  </sql>

</mapper>